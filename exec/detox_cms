#!/usr/bin/env python

import sys
import os
import re
import logging
import fnmatch

from argparse import ArgumentParser

parser = ArgumentParser(description = 'Detox')
parser.add_argument('--policy', '-p', metavar = 'FILE', dest = 'policy', required = True, help = 'Policy files.')
parser.add_argument('--config', '-c', metavar = 'CONFIG', dest = 'config', required = True, help = 'Configuration JSON.')
parser.add_argument('--comment', '-m', metavar = 'COMMENT', dest = 'comment', help = 'Comment to be sent to deletion interface as well as the local deletion record.')
parser.add_argument('--snapshot-run', '-N', action = 'store_true', dest = 'snapshot_run', help = 'Do not make any actual deletion requests or changes to inventory. Create no cycle, but save the results in the snapshot cache.')
parser.add_argument('--test-run', '-T', action = 'store_true', dest = 'test_run', help = 'Do not make any actual deletion requests or changes to inventory. Create a new cycle.')

args = parser.parse_args()
sys.argv = []

if args.snapshot_run and args.test_run:
    sys.stderr.write('--snapshot-run and --test-run cannot be set at the same time.')
    sys.exit(1)

## Load the configuration
from dynamo.dataformat.configuration import Configuration

config = Configuration(args.config)

## Set up logging (write to stdout)
from dynamo.core.executable import make_standard_logger

LOG = make_standard_logger(config.log_level)

## Configure the Detox object
from dynamo.detox.main import Detox

LOG.info('Starting Detox.')

config.detox.deletion_op.config.phedex = config.phedex
config.detox.copy_op.config.phedex = config.phedex
if args.snapshot_run or args.test_run:
    config.detox.history.test = True
    config.detox.deletion_op.config.dry_run = True
    config.detox.copy_op.config.dry_run = True

with open(os.environ['DYNAMO_BASE'] + '/etc/policies.tag') as tag:
    policy_version = tag.read().strip()

config.detox.policy_file = args.policy
config.detox.policy_version = policy_version

## Run the main program
from dynamo.core.executable import inventory

detox = Detox(config.detox)
detox.run(inventory, comment = args.comment)

## If test run, don't send back the inventory updates
if args.test_run:
    inventory.clear_update()
