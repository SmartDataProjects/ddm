#!/usr/bin/env python

import os
import sys
import httplib
import urllib
import urllib2
import mimetools

from argparse import ArgumentParser

parser = ArgumentParser(description = 'Submit one dynamo executable task.')
parser.add_argument('executable', metavar = 'PATH', nargs = '+', help = 'Executable script')
parser.add_argument('--title', '-t', metavar = 'TITLE', dest = 'title', help = 'Executable title')
parser.add_argument('--write-request', '-W', action = 'store_true', dest = 'write_request', help = 'Request write access.')
parser.add_argument('--work-dir', '-d', metavar = 'PATH', dest = 'workdir', help = 'Working directory. If not set, use a temporary directory.')

args = parser.parse_args()
sys.argv = []

## Submit an executable through the registry front end.

class HTTPSCertKeyHandler(urllib2.HTTPSHandler):
    """
    HTTPS handler authenticating by x509 user key and certificate.
    """

    def __init__(self):
        urllib2.HTTPSHandler.__init__(self)
        self.key = os.environ['X509_USER_PROXY']
        self.cert = os.environ['X509_USER_PROXY']

    def https_open(self, req):
        return self.do_open(self.create_connection, req)

    def create_connection(self, host, timeout = 300):
        return httplib.HTTPSConnection(host, key_file = self.key, cert_file = self.cert)

with open(args.executable[0]) as source:
    file_content = source.read()

boundary = mimetools.choose_boundary()

request = urllib2.Request('https://t3desk007.mit.edu/registry/application')
request.add_header('Content-type', 'multipart/form-data; boundary=%s' % boundary)

data = [
    '--' + boundary,
    'Content-Disposition: file; name="file"; filename="exec.py"',
    'Content-Type: text/plain',
    '',
    file_content
]

if len(args.executable) > 1:
    data += [
        '--' + boundary,
        'Content-Disposition: form-data; name="args"',
        '',
        ' '.join(args.executable[1:])
    ]

if args.title:
    data += [
        '--' + boundary,
        'Content-Disposition: form-data; name="title"',
        '',
        args.title
    ]

if args.write_request:
    data += [
        '--' + boundary,
        'Content-Disposition: form-data; name="write"',
        '',
        '1'
    ]

data += [
    '--' + boundary + '--'
]

body = '\r\n'.join(data)

request.add_header('Content-length', len(body))
request.add_data(body)

opener = urllib2.build_opener(HTTPSCertKeyHandler())
response = opener.open(request)

print response.read()
