#!/bin/bash
# --------------------------------------------------------------------------------------------------
# Process to run detox/dealer periodically.
# --------------------------------------------------------------------------------------------------

HOURS_PER_LOGFILE=24
DETOX_INTERVAL=6
DEALER_INTERVAL=1
INVENTORY_FULL_UPDATE_INTERVAL=12
NUM_CRASHES=0

while [ $# -gt 0 ]
do
  case $1 in
    --test-run)
      TEST="--test-run -m test"
      COMMENT="-m test"
      shift
      if [[ $2 =~ [1-9][0-9]* ]]
      then
        HOURS_PER_LOGFILE=$2
        shift
      else
        HOURS_PER_LOGFILE=1
      fi
      ;;
    --comment)
      shift
      COMMENT="-m $1"
      shift
      ;;
    -m)
      shift
      COMMENT="-m $1"
      shift
      ;;
    *)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

export DYNAMO_BASE=$(dirname $(cd $(dirname ${BASH_SOURCE[0]}); pwd))
source $DYNAMO_BASE/etc/profile.d/init.sh

ACTIVITY_IND=$($DYNAMO_BASE/bin/readconf --module detox 'main.activity_indicator')

exec 0<&-
trap "rm -f $ACTIVITY_IND" 0

while true
do

  # make sure the log directory exists
  mkdir -p $DYNAMO_LOGDIR

  LOG=$DYNAMO_LOGDIR/dynamo-$(date "+%Y%m%d_%H%M%S").log

  exec 1>$LOG
  exec 2>&1

  if [ $(du -mc $DYNAMO_LOGDIR/dynamo-* 2>/dev/null | awk '/total/ {print $1}') -gt 1000 ] # logs exceeding 1 GB
  then
    find $DYNAMO_LOGDIR -name dynamo-* -mtime +1 -delete
  fi

  echo "Start $HOURS_PER_LOGFILE cycles; log file $LOG"
  echo ""

  IHOUR=0
  while [ $IHOUR -lt $HOURS_PER_LOGFILE ]
  do
    if [ $IHOUR -gt 0 ]
    then
      echo "Sleeping for 1 hour."
      sleep 3600
    fi

    APPLICATIONS=""
    if [ $(($IHOUR%$DETOX_INTERVAL)) -eq 0 ]
    then
      APPLICATIONS="detox"
    elif [ $(($IHOUR%$DEALER_INTERVAL)) -eq 0 ]
    then
      APPLICATIONS="$APPLICATIONS dealer"
    fi

    if [ $(($IHOUR%$INVENTORY_FULL_UPDATE_INTERVAL)) -eq 0 ] && ! [ "$TEST" ]
    then
      echo "Performing the full update of inventory"
      $DYNAMO_BASE/bin/execlib common/inventory.py updatefull --site @disk
      $DYNAMO_BASE/bin/execlib common/inventory.py updatefull --site T1_DE_KIT_MSS T1_ES_PIC_MSS T1_FR_CCIN2P3_MSS
      $DYNAMO_BASE/bin/execlib common/inventory.py updatefull --site T1_IT_CNAF_MSS T1_RU_JINR_MSS T1_UK_RAL_MSS
      $DYNAMO_BASE/bin/execlib common/inventory.py updatefull --site T1_US_FNAL_MSS
      $DYNAMO_BASE/bin/execlib common/inventory.py updatefull --site T0_CH_CERN_MSS
    else
      echo "Updating the inventory"
      $DYNAMO_BASE/bin/execlib common/inventory.py update
    fi

    IHOUR=$(($IHOUR+1))

    if [ "$APPLICATIONS" ]
    then
      date

      if [[ $APPLICATIONS =~ detox ]] && ! [ "$TEST" ]
      then
        echo "Instantiating activity indicator to inhibit remote lock updates."
        touch $ACTIVITY_IND
      fi
  
      echo "Starting the main program."
      $DYNAMO_BASE/bin/dynamo $APPLICATIONS $TEST $COMMENT --log-level INFO --load-locks
      RC=$?

      if [[ $APPLICATIONS =~ detox ]] && ! [ "$TEST" ]
      then
        rm -f $ACTIVITY_IND
      fi

      if ! [ "$TEST" ] && [[ $APPLICATIONS =~ detox ]] && [ $RC -eq 0 ]
      then
        # test run to produce sites info
        if ! [ -e /var/run/dynamod.pid ]
        then
          # this is a non-daemon execution (test run?) - we need to set a comment
          COMMENT='--comment "Test run under command line execution."'
        fi
        $DYNAMO_BASE/bin/dynamo detox --test-run --detox-partition 'DataOps' 'caf-comm:MinimumCopies' 'caf-alca:MinimumCopies' 'local:MinimumCopies' 'IB RelVal:MinimumCopies' --log-level INFO $COMMENT
      fi

      if ! [ "$TEST" ] && [[ $APPLICATIONS =~ detox ]] && [ $RC -ne 130 ]
      then
        $DYNAMO_BASE/bin/siteinfo --out /home/cmsprod/public_html/IntelROCCS/Detox
      fi

      if [ $RC -ne 0 ] && [ $RC -ne 130 ]
      then
        # this is a crash of some sort
        if [ -e /var/run/dynamod.pid ]
        then
          # this process is run as a daemon - send email and continue
          echo "Help! Dynamo failed. Return code $RC. Check log $LOG on $HOSTNAME." | mailx -s "Dynamo error" t2lab@mit.edu
          NUM_CRASHES=$(($NUM_CRASHES+1))
  
          if [ $NUM_CRASHES -ge 2 ]
          then
            echo "Two crashes occurred. There is possibly a systematic problem. Exiting daemon."
            exit $RC
          fi

          echo "Re-entering cycle.. (see next log)"
          break
        else
          echo "Exiting with code $RC."
          exit $RC
        fi
      fi
  
#      if [ $IHOUR -eq $HOURS_PER_LOGFILE ] && [ $RC -ne 130 ]
#      then
#        # Clean unsubscribed data once every HOURS_PER_LOGFILE cycles
#        echo "Cleaning unsubscribed data."
#        $DYNAMO_BASE/bin/dynamo detox $TEST $COMMENT --detox-partition 'Unsubscribed' --log-level INFO
#      fi
  
      if [ $RC -eq 130 ]
      then
        # case: dynamo killed with SIGINT - you were probably running this script in a terminal and pressed Ctrl-C
        exit 0
      fi
 
      echo ""
    fi

  done

  if [ "$TEST" ]
  then
    echo "Exiting from test run."
    break
  fi

  # take a deep breath
  sleep 5
done

exit 0
